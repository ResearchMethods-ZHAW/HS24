{
  "hash": "dcab9a94a8539be7d985b7399498ad4b",
  "result": {
    "engine": "knitr",
    "markdown": "---\nlesson: Projekt\nthema: Projekt Fallstudie erstellen\nexecute: \n  echo: false   # set to true to show musterlösung\n  output: false\ncode-fold: false # set false to show all code\ncode-summary: \"Musterlösung\"\nknitr:\n  opts_chunk: \n    collapse: true\n---\n\n\n# Projek erstellen\n\n## Vorbereitung\n\nVor den eigentlichen Auswertungen müssen einige Vorbereitungen unternommen werden. Die Zeit, die man hier investiert, wird in den späteren Phasen um ein Mehrfaches eingespart. \n\nWie im Unterricht am Morgen empfehle auch ich mit Projekten zu arbeiten, da diese sehr einfach ausgetauscht (auf verschiedene Rechner) und somit auch reproduziert werden können. Wichtig ist, dass es keine absoluten Arbeitspfade sondern nur relative gibt. Der Datenimport (und -export) kann mithilfe dieser relativen Pfade stark vereinfacht werden. --> Kurz gesagt: Projekte helfen alles am richtigen Ort zu behalten (mehr zur Arbeit mit Projekten: [Link](https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects)).\n\n- Erstellt an einem passenden Speicherort (evtl. onedrive für das gemeinsame Arbeiten an einem Projekt) ein neues Projekt mit einem treffenden Namen:\n\n--> File / New Project\n\n## Aufgabe 1: Projektaufbau\n\n__Hinweise:__\n\nNutzt für allen Text, welcher nicht im Code integriert ist, das Symbol #. Wenn ihr den Text als Titel definieren wollt, so dass er in der Übersicht erscheint, können vor dem Wort \"#\" und nach dem Wort \"####\" eingefügt werden.\n\n\n::: {.cell}\n\n:::\n\n\nTipps: \n\n- Alt + - = <- \n\n- Ctrl + Shift + C = # vor der ausgewählten Zeile / den ausgewählten Zeilen hinzufügen oder wieder löschen\n\n__Aufbau eines Skripts__\n\nZuerst immer den __Titel des Projekts__ sowie den __Autor/ die Autorin__ des Skripts nennen. Hier soll auch die __Herkunft der Daten__ ersichtlich sein und falls externe Daten verwendet werden, sollte geklärt werden, wer Dateneigentümer ist (WPZ und Meteo Schweiz).\n\nIm Skript soll immer die __Ordnerstruktur__ des Projekts genannt werden. So kann der Arbeitsvorgang auf verschiedenen Rechnern einfach reproduziert werden (ich verwende hier ein Projektordner mit den Unterordnern __scripts, data, results).\n\nBeschreibt zudem kurz die verwendeten __Meteodaten__ (siehe dazu Metadata Meteodaten, --> order_XXX_legend.txt)\n\nEin Skript kann in R eigentlich immer (mehr oder weniger) nach dem selbem Schema aufgebaut sein. Dieses Schema enthält bei uns folgende Kapitel: \n\n0) Metadaten und Definitionen\n1) Datenimport\n2) Vorbereitung \n3) Deskriptive Analyse und Visualisierung \n4) Multifaktorielle Analyse und Visualisierung\n\nBereitet euer Skript mit diesen Kapitel vor.\n\n\n::: {.cell}\n\n:::\n\n\nIn einem professionellen Bericht ist es angebracht, wenn alle Abbildung einheitlich sind. Dafür braucht es u.a. eine Farbpalette. Ich definiere meine Auswahl bereits hier; das hat den Vorteil, dass man die Farbnamen nur einmal schreiben muss und später die selbst definierte Palette unter der Variable \"mycolors\" abrufen kann.\n\n\n::: {.cell}\n\n:::\n\n\n\n## Aufgabe 2: Laden der Bibliotheken\n\n- Lädt nun die nachfolgenden, benötigten Bibliotheken.\n\n- Diese habt ihr, falls nötig, im Kapitel [Vorbereitung] installiert.\n\n\n::: {.cell}\n\n:::\n\n\n## Aufgabe 3: Zeitliche Definitionen\n\nWir lesen später zwei verschiedene Datensätze ein. Beide sollen exakt denselben Zeitraum umfassen. Definiert dazu den ersten und letzten Tag __gemäss den bei euch vorhandenen Zähldaten__ (das unterscheidet sich von Gruppe zu Gruppe).\n\n\n::: {.cell}\n\n:::\n\n\n\nEin Teil unserer Auswertungen ist der Einfluss der Corona-Lockdown auf das Besuchsverhalten. \n\n-Wir müssen also Start und Ende der beiden Lockdowns in der Schweiz definieren:\n\n\n::: {.cell}\n\n:::\n\n\nEbenfalls müssen die erste und letzte Kalenderwoche der Untersuchungsfrist definiert werden. Diese werden bei wochenweisen Analysen ausgeklammert da sie i.d.R. unvollständig sind (das ist ein späterer Arbeitsschritt). Geht wie oben vor. Tipp: der Befehl __isoweek()__ liefert euch die Kalenderwoche.\n\nFerienzeiten können einen grossen Einfluss auf das Besucheraufkommen haben. Die relevanten Ferienzeiträume müssen daher bekannt sein (heruntergeladen von https://www.schulferien.org/schweiz/ferien/2020/). \n\nLest das bereitgestellte .csv mit den Ferienzeiträumen ein und speichert es unter __schulferien__.\n\n\n::: {.cell}\n\n:::\n\n\nNun sind alle Vorbereitungen gemacht, die Projektstruktur aufgebaut und die eigentliche Arbeit kann im nächsten Schritt beginnen.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}