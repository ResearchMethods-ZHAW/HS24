{
  "hash": "76b40e74e41cc73e10b348ca62d3de7c",
  "result": {
    "engine": "knitr",
    "markdown": "---\nlesson: Statistik5\nknitr:\n  opts_chunk: \n    collapse: false\n---\n\n\n\n# Statistik 5: Demo\n\n[Demoscript herunterladen (.R)](../purl/Statistik5_Demo.R){.dld}\n\n[Demoscript herunterladen (.qmd)](../purl/Statistik5_Demo.qmd){.dld}\n\n## von LMs zu GLMs\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"pacman\")\np_load(\"tidyverse\")\n\n# Daten erstellen und anschauen\nstrand <- tibble(\n  Temperatur = c(10, 12, 16, 20, 24, 25, 30, 33, 37),\n  Besucher = c(40, 12, 50, 500, 400, 900, 1500, 900, 2000)\n)\n\nggplot(strand, aes(x = Temperatur, y = Besucher)) +\n  geom_point() +\n  xlim(0, 40) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Modell definieren und anschauen\nlm_strand <- lm(Besucher ~ Temperatur, data = strand)\nsummary(lm_strand)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Besucher ~ Temperatur, data = strand)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-476.41 -176.89   55.59  218.82  353.11 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -855.01     290.54  -2.943 0.021625 *  \nTemperatur     67.62      11.80   5.732 0.000712 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 311.7 on 7 degrees of freedom\nMultiple R-squared:  0.8244,\tAdjusted R-squared:  0.7993 \nF-statistic: 32.86 on 1 and 7 DF,  p-value: 0.0007115\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modelvalidierung\npar(mfrow = c(2, 2))\nplot(lm_strand)\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(strand, aes(x = Temperatur, y = Besucher)) +\n  geom_point() +\n  xlim(0, 40) +    \n  stat_smooth(method = \"lm\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# GLMs definieren und anschauen\n\n# ist dasselbe wie ein LM\nglm_gaussian <- glm(Besucher ~ Temperatur, family = \"gaussian\", data = strand) \nsummary(glm_gaussian)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Besucher ~ Temperatur, family = \"gaussian\", data = strand)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -855.01     290.54  -2.943 0.021625 *  \nTemperatur     67.62      11.80   5.732 0.000712 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 97138.03)\n\n    Null deviance: 3871444  on 8  degrees of freedom\nResidual deviance:  679966  on 7  degrees of freedom\nAIC: 132.63\n\nNumber of Fisher Scoring iterations: 2\n```\n\n\n:::\n:::\n\n\n\n## Poisson Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Poisson passt besser zu den Daten \nglm_poisson <- glm(Besucher ~ Temperatur, family = \"poisson\", data = strand) \n\nsummary(glm_poisson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Besucher ~ Temperatur, family = \"poisson\", data = strand)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) 3.500301   0.056920   61.49   <2e-16 ***\nTemperatur  0.112817   0.001821   61.97   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 6011.8  on 8  degrees of freedom\nResidual deviance: 1113.7  on 7  degrees of freedom\nAIC: 1185.1\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n\nRücktranformation der Werte auf die orginale Skale (Hier Exponentialfunktion da family=possion als Link-Funktion den natürlichen Logarithmus (log) verwendet) Besucher = exp(3.50 + 0.11 Temperatur/°C)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# So kann man auf die Coefficients des Modells \"extrahieren\" und dann mit[] auswählen\nglm_poisson$coefficients \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)  Temperatur \n  3.5003009   0.1128168 \n```\n\n\n:::\n\n```{.r .cell-code}\nexp(glm_poisson$coefficients[1])# Anzahl besucher bei 0°C\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept) \n   33.12542 \n```\n\n\n:::\n\n```{.r .cell-code}\nexp(glm_poisson$coefficients[1] + 30 * glm_poisson$coefficients[2]) # Anzahl besucher bei 30°C\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept) \n   977.3102 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Test Overdispersion\np_load(\"performance\")\ncheck_overdispersion(glm_poisson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Overdispersion test\n\n       dispersion ratio =  149.683\n  Pearson's Chi-Squared = 1047.778\n                p-value =  < 0.001\n```\n\n\n:::\n:::\n\n-> Es liegt Overdispersion vor. Darum quasipoisson wählen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_quasipoisson <- glm(Besucher ~ Temperatur, family = \"quasipoisson\", data = strand)\nsummary(glm_quasipoisson)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Besucher ~ Temperatur, family = \"quasipoisson\", \n    data = strand)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)  3.50030    0.69639   5.026  0.00152 **\nTemperatur   0.11282    0.02227   5.065  0.00146 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for quasipoisson family taken to be 149.6826)\n\n    Null deviance: 6011.8  on 8  degrees of freedom\nResidual deviance: 1113.7  on 7  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2))\nplot(glm_gaussian, main = \"glm_gaussian\")\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2))\nplot(glm_poisson, main = \"glm_poisson\")\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2))\nplot(glm_quasipoisson, main = \"glm_quasipoisson\")\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n-> Die Outputs von glm_poisson und glm_quasipoisson sind bis auf die p-Werte identisch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = strand, aes(x = Temperatur, y = Besucher)) +\n  geom_point() +\n  xlim(0, 40) +    \n  stat_smooth(method = \"lm\", color = \"blue\", se = FALSE) +\n  stat_smooth(method = \"glm\", method.args = list(family = \"poisson\"), \n                color = \"red\", se = FALSE) +\n  stat_smooth(method = \"glm\", method.args = list(family = \"quasipoisson\"), \n                  color = \"green\", linetype = \"dashed\", se = FALSE) +\n    annotate(geom=\"text\", x = 4, y = 2000, label = \"gaussian\", color = \"blue\") +\n    annotate(geom=\"text\", x = 4, y = 1800, label = \"poisson\", color = \"red\") +\n    annotate(geom=\"text\", x = 4, y = 1600, label = \"quasipoisson\", color = \"green\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Logistische Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbathing <- tibble(\n  temperatur = c(1, 2, 5, 9, 14, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29),\n  badend = c(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1)\n)\n\nggplot(bathing, aes(x = temperatur, y = badend)) +\n  geom_point() +\n  xlim(0, 30) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Logistisches Modell definieren\nglm_logistic <- glm(badend ~ temperatur, family = \"binomial\", data = bathing)\nsummary(glm_logistic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = badend ~ temperatur, family = \"binomial\", data = bathing)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)  \n(Intercept)  -5.4652     2.8501  -1.918   0.0552 .\ntemperatur    0.2805     0.1350   2.077   0.0378 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 20.728  on 14  degrees of freedom\nResidual deviance: 10.829  on 13  degrees of freedom\nAIC: 14.829\n\nNumber of Fisher Scoring iterations: 6\n```\n\n\n:::\n\n```{.r .cell-code}\n# Test Overdispersion\ncheck_overdispersion(glm_logistic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Overdispersion test\n\n dispersion ratio = 1.120\n          p-value = 0.808\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modeldiagnostik (godness of fit test, wenn nicht signifikant, dann OK)\n1 - pchisq(glm_logistic$deviance, glm_logistic$df.resid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6251679\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modeldiagnostik mit funktion \"check_model\"\ncheck_model(glm_logistic)\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Modelresultate\n\n# pseudo-R²\nr2(glm_logistic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# R2 for Logistic Regression\n  Tjur's R2: 0.538\n```\n\n\n:::\n\n```{.r .cell-code}\n# Steilheit der Beziehung (relative Änderung der odds bei x + 1 vs. x)\nexp(glm_logistic$coefficients[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntemperatur \n  1.323807 \n```\n\n\n:::\n\n```{.r .cell-code}\n# LD50 (also hier: Temperatur, bei der 50% der Touristen baden)\n-glm_logistic$coefficients[1] / glm_logistic$coefficients[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept) \n   19.48311 \n```\n\n\n:::\n\n```{.r .cell-code}\n# oder\np_load(\"MASS\")\ndose.p(glm_logistic, p = 0.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Dose       SE\np = 0.5: 19.48311 2.779485\n```\n\n\n:::\n\n```{.r .cell-code}\n# Vorhersagen\npredicted <- predict(glm_logistic, type = \"response\")\n\n# Konfusionsmatrix\nkm <- table(bathing$badend, predicted > 0.5)\nkm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \n    FALSE TRUE\n  0     7    1\n  1     1    6\n```\n\n\n:::\n\n```{.r .cell-code}\n# Missklassifizierungsrate\n1 - sum(diag(km) / sum(km))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1333333\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plotting\nggplot(data = bathing, aes(x = temperatur, y = badend)) +\n  geom_point() +\n  xlim(0, 30) +\n  labs(x = \"Temperature (°C)\", y = \"% Bathing\") +\n  stat_smooth(method = \"glm\", method.args = list(family = \"binomial\"), se = FALSE) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Binominale Regression\n\n::: {.cell}\n\n```{.r .cell-code}\np_load(\"doBy\")\n?budworm\n\ndata(budworm)\nstr(budworm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t12 obs. of  4 variables:\n $ sex   : Factor w/ 2 levels \"female\",\"male\": 2 2 2 2 2 2 1 1 1 1 ...\n $ dose  : int  1 2 4 8 16 32 1 2 4 8 ...\n $ ndead : int  1 4 9 13 18 20 0 2 6 10 ...\n $ ntotal: int  20 20 20 20 20 20 20 20 20 20 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(budworm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     sex         dose          ndead           ntotal  \n female:6   Min.   : 1.0   Min.   : 0.00   Min.   :20  \n male  :6   1st Qu.: 2.0   1st Qu.: 3.50   1st Qu.:20  \n            Median : 6.0   Median : 9.50   Median :20  \n            Mean   :10.5   Mean   : 9.25   Mean   :20  \n            3rd Qu.:16.0   3rd Qu.:13.75   3rd Qu.:20  \n            Max.   :32.0   Max.   :20.00   Max.   :20  \n```\n\n\n:::\n:::\n\n\nDie Insektiziddosen wurden als Zweierpotenzen gewählt (d.h. jede Dosis ist doppelt so hoch wie die vorhergehende Dosis). Da wir von einer multiplikativen Wirkung der Dosis ausgehen, ist es vorteilhaft, die Werte mit einem Logarithmus mit Basis 2 zu logarithmieren.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbudworm$ldose <- log2(budworm$dose)\n\n# Das Modell kann auf zwei verschiedene Varianten spezifiziert werden \nglm_binomial <- glm( cbind( ndead, ntotal-ndead) ~ ldose*sex, family = binomial, data = budworm)\n\nglm_binom <- glm(ndead/ntotal ~ ldose*sex, family = binomial, weights = ntotal, data = budworm)\n\ncoef(glm_binomial)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)         ldose       sexmale ldose:sexmale \n   -2.9935418     0.9060364     0.1749868     0.3529130 \n```\n\n\n:::\n\n```{.r .cell-code}\ncoef(glm_binom)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)         ldose       sexmale ldose:sexmale \n   -2.9935418     0.9060364     0.1749868     0.3529130 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Das Resultat ist identisch\n\n# Model optimierung\ndrop1(glm_binomial, test = \"Chisq\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSingle term deletions\n\nModel:\ncbind(ndead, ntotal - ndead) ~ ldose * sex\n          Df Deviance    AIC    LRT Pr(>Chi)\n<none>         4.9937 43.104                \nldose:sex  1   6.7571 42.867 1.7633   0.1842\n```\n\n\n:::\n\n```{.r .cell-code}\nglm_binomial_2 <- update( glm_binomial, .~.-sex:ldose)\ndrop1(glm_binomial_2, test = \"Chisq\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSingle term deletions\n\nModel:\ncbind(ndead, ntotal - ndead) ~ ldose + sex\n       Df Deviance     AIC     LRT  Pr(>Chi)    \n<none>       6.757  42.867                      \nldose   1  118.799 152.909 112.042 < 2.2e-16 ***\nsex     1   16.984  51.094  10.227  0.001384 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Validate Model\ncheck_overdispersion(glm_binomial_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Overdispersion test\n\n dispersion ratio = 0.929\n          p-value = 0.592\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_model(glm_binomial_2)\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Resultat und Visualisierung\nsummary(glm_binomial_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = cbind(ndead, ntotal - ndead) ~ ldose + sex, family = binomial, \n    data = budworm)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -3.4732     0.4685  -7.413 1.23e-13 ***\nldose         1.0642     0.1311   8.119 4.70e-16 ***\nsexmale       1.1007     0.3558   3.093  0.00198 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 124.8756  on 11  degrees of freedom\nResidual deviance:   6.7571  on  9  degrees of freedom\nAIC: 42.867\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modellgüte (pseudo-R²)\n1 - (glm_binomial_2$dev / glm_binomial_2$null)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9458896\n```\n\n\n:::\n\n```{.r .cell-code}\n# ld 50 Female (cf = c(1, 2) = Intercept und dosis)\n( ld50_feamle <- dose.p(glm_binomial_2, cf = c(1, 2)) ) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Dose        SE\np = 0.5: 3.263587 0.2297539\n```\n\n\n:::\n\n```{.r .cell-code}\n# Zurücktransformieren\n2^ld50_feamle\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Dose        SE\np = 0.5: 9.60368 0.2297539\n```\n\n\n:::\n\n```{.r .cell-code}\n# ld 50 male\n# dose.p(glm_binomial_2, cf = c(1, 2, 3)) \n# funktioniert nicht wir müssen es manuell ausrechnen\nld50_male <- -(glm_binomial_2$coefficients[1] + glm_binomial_2$coefficients[2] ) / glm_binomial_2$coefficients[3]\n# Zurücktransformieren\n2^ld50_male\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept) \n   4.558211 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Männliche Tiere reagieren wesentlich empfindlicher auf das Insektizid\n\n# Visualisierung\nggplot(budworm, aes(x = ldose, y = ndead / 20, color = sex)) +\n  geom_point() +\n  geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), se = FALSE) +\n  labs(x = \"log2(dose)\", y = \"probability dead\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik5_Demo_files/figure-html/unnamed-chunk-15-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Statistik5_Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}