{
  "hash": "6a7cbe5e458c03e71a0bed4e3764d755",
  "result": {
    "engine": "knitr",
    "markdown": "---\nlesson: Statistik6\nknitr:\n  opts_chunk: \n    collapse: false\n---\n\n\n# Statistik 8: Demo\n\n[Demoscript herunterladen (.R)](../purl/Statistik8_Demo.R){.dld}\n\n[Demoscript herunterladen (.qmd)](../purl/Statistik8_Demo.qmd){.dld}\n\n\n-   Datensatz *Doubs_spe* von  @borcard2011\n\n\n## Cluster-Analyse k-means\n\n### Datenbeschreibung\n\nDer Datensatz enthält Daten zum Vorkommen von Fischarten und den zugehörigen Umweltvariablen im Fluss Doubs (Jura). Es gibt 29 Probestellen (sites), an denen jeweils die Abundanzen von 27 Fischarten (auf einer Skalen von 0 bis 5) erhoben wurden. In dieser Demo verwenden wir die Artdaten.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"pacman\")\np_load(\"tidyverse\")\n\nspe <- read_delim(\"./datasets/stat/Doubs_species.csv\", delim = \";\") |>\n  column_to_rownames(var = \"Site\")\n\nstr(spe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t29 obs. of  27 variables:\n $ Cogo: num  0 0 0 0 0 0 0 0 0 1 ...\n $ Satr: num  3 5 5 4 2 3 5 0 1 3 ...\n $ Phph: num  0 4 5 5 3 4 4 1 4 4 ...\n $ Babl: num  0 3 5 5 2 5 5 3 4 1 ...\n $ Thth: num  0 0 0 0 0 0 0 0 0 1 ...\n $ Teso: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Chna: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Pato: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Lele: num  0 0 0 0 5 1 1 0 2 0 ...\n $ Sqce: num  0 0 0 1 2 2 1 5 2 1 ...\n $ Baba: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Albi: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Gogo: num  0 0 0 1 2 1 0 0 1 0 ...\n $ Eslu: num  0 0 1 2 4 1 0 0 0 0 ...\n $ Pefl: num  0 0 0 2 4 1 0 0 0 0 ...\n $ Rham: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Legi: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Scer: num  0 0 0 0 2 0 0 0 0 0 ...\n $ Cyca: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Titi: num  0 0 0 1 3 2 0 1 0 0 ...\n $ Abbr: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Icme: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Gyce: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Ruru: num  0 0 0 0 5 1 0 4 0 0 ...\n $ Blbj: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Alal: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Anan: num  0 0 0 0 0 0 0 0 0 0 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(spe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Cogo             Satr            Phph            Babl      \n Min.   :0.0000   Min.   :0.000   Min.   :0.000   Min.   :0.000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:0.000   1st Qu.:1.000  \n Median :0.0000   Median :1.000   Median :3.000   Median :2.000  \n Mean   :0.5172   Mean   :1.966   Mean   :2.345   Mean   :2.517  \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000   3rd Qu.:4.000  \n Max.   :3.0000   Max.   :5.000   Max.   :5.000   Max.   :5.000  \n      Thth             Teso             Chna             Pato       \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.5172   Mean   :0.6552   Mean   :0.6207   Mean   :0.8966  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:2.0000  \n Max.   :4.0000   Max.   :5.0000   Max.   :3.0000   Max.   :4.0000  \n      Lele            Sqce            Baba            Albi      \n Min.   :0.000   Min.   :0.000   Min.   :0.000   Min.   :0.000  \n 1st Qu.:0.000   1st Qu.:1.000   1st Qu.:0.000   1st Qu.:0.000  \n Median :1.000   Median :2.000   Median :0.000   Median :0.000  \n Mean   :1.483   Mean   :1.931   Mean   :1.483   Mean   :0.931  \n 3rd Qu.:2.000   3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:1.000  \n Max.   :5.000   Max.   :5.000   Max.   :5.000   Max.   :5.000  \n      Gogo            Eslu            Pefl            Rham            Legi  \n Min.   :0.000   Min.   :0.000   Min.   :0.000   Min.   :0.000   Min.   :0  \n 1st Qu.:0.000   1st Qu.:0.000   1st Qu.:0.000   1st Qu.:0.000   1st Qu.:0  \n Median :1.000   Median :1.000   Median :1.000   Median :0.000   Median :0  \n Mean   :1.897   Mean   :1.379   Mean   :1.241   Mean   :1.138   Mean   :1  \n 3rd Qu.:4.000   3rd Qu.:2.000   3rd Qu.:2.000   3rd Qu.:2.000   3rd Qu.:2  \n Max.   :5.000   Max.   :5.000   Max.   :5.000   Max.   :5.000   Max.   :5  \n      Scer             Cyca             Titi            Abbr       \n Min.   :0.0000   Min.   :0.0000   Min.   :0.000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :1.000   Median :0.0000  \n Mean   :0.7241   Mean   :0.8621   Mean   :1.552   Mean   :0.8966  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:3.000   3rd Qu.:1.0000  \n Max.   :5.0000   Max.   :5.0000   Max.   :5.000   Max.   :5.0000  \n      Icme             Gyce           Ruru            Blbj      \n Min.   :0.0000   Min.   :0.00   Min.   :0.000   Min.   :0.000  \n 1st Qu.:0.0000   1st Qu.:0.00   1st Qu.:0.000   1st Qu.:0.000  \n Median :0.0000   Median :0.00   Median :1.000   Median :0.000  \n Mean   :0.6207   Mean   :1.31   Mean   :2.172   Mean   :1.069  \n 3rd Qu.:0.0000   3rd Qu.:2.00   3rd Qu.:5.000   3rd Qu.:2.000  \n Max.   :5.0000   Max.   :5.00   Max.   :5.000   Max.   :5.000  \n      Alal            Anan      \n Min.   :0.000   Min.   :0.000  \n 1st Qu.:0.000   1st Qu.:0.000  \n Median :0.000   Median :0.000  \n Mean   :1.966   Mean   :0.931  \n 3rd Qu.:5.000   3rd Qu.:2.000  \n Max.   :5.000   Max.   :5.000  \n```\n\n\n:::\n:::\n\n\nk-means ist eine lineare Methode und daher nicht für Artdaten geeignet), darum müssen wir unsere Daten transformieren (für die meisten anderen Daten ist die Funktion „scale“, welche jede Variable so skaliert, dass sie einen Mittelwert von 0 und einen Standardabweichungswert von 1 hat, besser geeignet)\ndie Randsumme der Quadrate gleich eins machen\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_load(vegan)\nspe_norm <- decostand(spe, \"normalize\")\n```\n:::\n\n\n### k-means clustering mit Artdaten\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# k-means-Clustering mit 4 Gruppen durchführen\nset.seed(123)\nkmeans_1 <- kmeans(spe_norm, centers = 4, nstart = 100)\nkmeans_1$cluster\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n S1  S2  S3  S4  S5  S6  S7  S8  S9 S10 S11 S12 S13 S14 S15 S16 S17 S18 S19 S20 \n  3   3   3   3   1   3   3   1   3   3   3   3   3   3   1   1   1   1   2   2 \nS21 S22 S23 S24 S25 S26 S27 S28 S29 \n  2   4   4   4   2   2   2   2   2 \n```\n\n\n:::\n\n```{.r .cell-code}\n#  Visualisierung\np_load(factoextra)\n\nfviz_cluster(kmeans_1, main = \"\", data = spe) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik8_Demo_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nWie viele Cluster (Gruppen) sollen definiert werden? Oft haben wir eine Vorstelung über den \nRange der Anzahl Cluster. Value criterions wie der Simple Structure Index (ssi) können\neine zusätzliche Hilfe sein, um die geeignete Anzahl von Clustern zu finden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# k-means partionierung, 2 bis 10 Gruppen\nset.seed(123)\nkm_cascade <- cascadeKM(spe_norm,  inf.gr = 2, sup.gr = 10, iter = 100, criterion = \"ssi\")\nkm_cascade$results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     2 groups  3 groups  4 groups   5 groups  6 groups  7 groups  8 groups\nSSE 8.2149405 6.4768108 5.0719796 4.30155732 3.5856120 2.9523667 2.4840549\nssi 0.1312111 0.1675852 0.1240975 0.05927008 0.1178577 0.1444813 0.1369294\n     9 groups  10 groups\nSSE 2.0521888 1.75992916\nssi 0.1462769 0.09995081\n```\n\n\n:::\n\n```{.r .cell-code}\nkm_cascade$partition\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    2 groups 3 groups 4 groups 5 groups 6 groups 7 groups 8 groups 9 groups\nS1         1        3        4        1        5        6        4        7\nS2         1        3        4        5        3        3        7        2\nS3         1        3        4        5        3        3        7        2\nS4         1        3        4        5        3        3        7        2\nS5         2        2        1        2        4        4        5        8\nS6         1        3        4        5        3        3        7        2\nS7         1        3        4        5        3        3        7        2\nS8         2        2        1        2        4        4        8        9\nS9         1        3        4        5        3        3        7        2\nS10        1        3        4        5        3        1        1        3\nS11        1        3        4        5        3        1        1        3\nS12        1        3        4        5        3        1        1        3\nS13        1        3        4        5        3        1        1        3\nS14        1        3        4        5        3        1        1        6\nS15        1        2        1        2        1        5        2        6\nS16        2        2        1        2        1        5        2        1\nS17        2        2        1        2        1        5        2        1\nS18        2        2        1        2        1        5        2        1\nS19        2        1        3        3        2        7        6        4\nS20        2        1        3        3        2        7        6        4\nS21        2        1        3        3        2        7        6        4\nS22        2        1        2        4        6        2        3        5\nS23        2        1        2        4        6        2        3        5\nS24        2        1        2        4        6        2        3        5\nS25        2        1        3        3        2        7        6        4\nS26        2        1        3        3        2        7        6        4\nS27        2        1        3        3        2        7        6        4\nS28        2        1        3        3        2        7        6        4\nS29        2        1        3        3        2        7        6        4\n    10 groups\nS1          3\nS2          4\nS3          4\nS4          4\nS5         10\nS6          8\nS7          4\nS8          9\nS9          8\nS10         5\nS11         5\nS12         5\nS13         5\nS14         1\nS15         1\nS16         6\nS17         6\nS18         6\nS19         7\nS20         7\nS21         7\nS22         2\nS23         2\nS24         2\nS25         7\nS26         7\nS27         7\nS28         7\nS29         7\n```\n\n\n:::\n\n```{.r .cell-code}\n# Visualisierung citerion Simple Structure Index\nplot(km_cascade, sortg = TRUE)\n```\n\n::: {.cell-output-display}\n![](Statistik8_Demo_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# k-means-Clustering mit 3 Gruppen durchführen\nset.seed(123)\nkmeans_2 <- kmeans(spe_norm, centers = 3, nstart = 100)\n\n\n#  Clustering-Resultat in Ordinationsplots darstellen\nfviz_cluster(kmeans_2, main = \"\", data = spe) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik8_Demo_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Resultat intepretieren\nkmeans_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nK-means clustering with 3 clusters of sizes 6, 11, 12\n\nCluster means:\n        Cogo        Satr       Phph       Babl        Thth        Teso\n1 0.06167791 0.122088022 0.26993915 0.35942538 0.032664966 0.135403325\n2 0.00000000 0.004866252 0.01822625 0.05081739 0.004866252 0.004866252\n3 0.10380209 0.542300691 0.50086515 0.43325916 0.114024105 0.075651573\n        Chna       Pato       Lele      Sqce       Baba       Albi       Gogo\n1 0.06212775 0.21568957 0.25887226 0.2722562 0.15647062 0.15743876 0.16822286\n2 0.09192201 0.06820012 0.12408793 0.2326491 0.17693085 0.09644087 0.26235343\n3 0.00000000 0.00000000 0.06983991 0.1237394 0.02385019 0.00000000 0.05670453\n        Eslu       Pefl      Rham       Legi       Scer       Cyca       Titi\n1 0.12276089 0.17261621 0.0793181 0.06190283 0.04516042 0.06190283 0.14539027\n2 0.17089496 0.12305815 0.1610382 0.15286338 0.11664707 0.11650273 0.19076381\n3 0.04722294 0.02949244 0.0000000 0.00000000 0.00000000 0.00000000 0.03833408\n        Abbr       Icme       Gyce       Ruru       Blbj      Alal       Anan\n1 0.01473139 0.00000000 0.03192175 0.32201597 0.01473139 0.1095241 0.04739636\n2 0.14226648 0.09686076 0.24352816 0.31984654 0.18061983 0.4497421 0.13725875\n3 0.00000000 0.00000000 0.00000000 0.01049901 0.00000000 0.0000000 0.00000000\n\nClustering vector:\n S1  S2  S3  S4  S5  S6  S7  S8  S9 S10 S11 S12 S13 S14 S15 S16 S17 S18 S19 S20 \n  3   3   3   3   1   3   3   1   3   3   3   3   3   3   1   1   1   1   2   2 \nS21 S22 S23 S24 S25 S26 S27 S28 S29 \n  2   2   2   2   2   2   2   2   2 \n\nWithin cluster sum of squares by cluster:\n[1] 1.736145 2.230527 2.510139\n (between_SS / total_SS =  57.5 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n```\n\n\n:::\n\n```{.r .cell-code}\n# Zuordnung Sites zu den Clustern (separat)\nkmeans_2$cluster\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n S1  S2  S3  S4  S5  S6  S7  S8  S9 S10 S11 S12 S13 S14 S15 S16 S17 S18 S19 S20 \n  3   3   3   3   1   3   3   1   3   3   3   3   3   3   1   1   1   1   2   2 \nS21 S22 S23 S24 S25 S26 S27 S28 S29 \n  2   2   2   2   2   2   2   2   2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Anzahl Sites pro Cluster\nkmeans_2$size\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  6 11 12\n```\n\n\n:::\n\n```{.r .cell-code}\n# Mittlere Abundance für jede Variable (Fischart) in jedem Cluster (mit untransformierten Daten)\naggregate(spe, by = list(cluster = kmeans_2$cluster), mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cluster      Cogo       Satr      Phph      Babl       Thth       Teso\n1       1 0.6666667 1.33333333 2.8333333 3.6666667 0.33333333 1.50000000\n2       2 0.0000000 0.09090909 0.2727273 0.7272727 0.09090909 0.09090909\n3       3 0.9166667 4.00000000 4.0000000 3.5833333 1.00000000 0.75000000\n       Chna     Pato      Lele     Sqce     Baba     Albi     Gogo      Eslu\n1 0.6666667 2.333333 2.8333333 2.500000 1.666667 1.666667 1.833333 1.3333333\n2 1.2727273 1.090909 1.7272727 2.636364 2.727273 1.545455 3.454545 2.4545455\n3 0.0000000 0.000000 0.5833333 1.000000 0.250000 0.000000 0.500000 0.4166667\n      Pefl      Rham      Legi     Scer      Cyca      Titi      Abbr     Icme\n1 1.833333 0.8333333 0.6666667 0.500000 0.6666667 1.5000000 0.1666667 0.000000\n2 2.000000 2.5454545 2.2727273 1.636364 1.9090909 2.9090909 2.2727273 1.636364\n3 0.250000 0.0000000 0.0000000 0.000000 0.0000000 0.3333333 0.0000000 0.000000\n       Gyce       Ruru      Blbj     Alal     Anan\n1 0.3333333 3.16666667 0.1666667 1.166667 0.500000\n2 3.2727273 3.90909091 2.7272727 4.545455 2.181818\n3 0.0000000 0.08333333 0.0000000 0.000000 0.000000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Mittlere Fisch-Artenzahl in jedem Cluster\naggregate( specnumber(spe), by = list(cluster = kmeans_2$cluster), mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cluster         x\n1       1 16.833333\n2       2 18.000000\n3       3  6.333333\n```\n\n\n:::\n\n```{.r .cell-code}\n# Unterschiede Mittlere Fisch-Artenzahl pro Cluster testen\n\n# File für Anova erstellen\nspe_2 <- data.frame(spe, \n                    \"cluster\" = as.factor(kmeans_2$cluster), \n                    \"species_richness\" = specnumber(spe))\nstr(spe_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t29 obs. of  29 variables:\n $ Cogo            : num  0 0 0 0 0 0 0 0 0 1 ...\n $ Satr            : num  3 5 5 4 2 3 5 0 1 3 ...\n $ Phph            : num  0 4 5 5 3 4 4 1 4 4 ...\n $ Babl            : num  0 3 5 5 2 5 5 3 4 1 ...\n $ Thth            : num  0 0 0 0 0 0 0 0 0 1 ...\n $ Teso            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Chna            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Pato            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Lele            : num  0 0 0 0 5 1 1 0 2 0 ...\n $ Sqce            : num  0 0 0 1 2 2 1 5 2 1 ...\n $ Baba            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Albi            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Gogo            : num  0 0 0 1 2 1 0 0 1 0 ...\n $ Eslu            : num  0 0 1 2 4 1 0 0 0 0 ...\n $ Pefl            : num  0 0 0 2 4 1 0 0 0 0 ...\n $ Rham            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Legi            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Scer            : num  0 0 0 0 2 0 0 0 0 0 ...\n $ Cyca            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Titi            : num  0 0 0 1 3 2 0 1 0 0 ...\n $ Abbr            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Icme            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Gyce            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Ruru            : num  0 0 0 0 5 1 0 4 0 0 ...\n $ Blbj            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Alal            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Anan            : num  0 0 0 0 0 0 0 0 0 0 ...\n $ cluster         : Factor w/ 3 levels \"1\",\"2\",\"3\": 3 3 3 3 1 3 3 1 3 3 ...\n $ species_richness: int  1 3 4 8 11 10 5 5 6 6 ...\n```\n\n\n:::\n\n```{.r .cell-code}\naov_1 <- aov(species_richness~cluster, data = spe_2)\nsummary(aov_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncluster      2  896.4   448.2   11.99 0.000204 ***\nResiduals   26  971.5    37.4                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\np_load(\"agricolae\")\n( Tukey <- HSD.test(aov_1, \"cluster\") )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$statistics\n   MSerror Df     Mean       CV\n  37.36538 26 12.93103 47.27173\n\n$parameters\n   test  name.t ntr StudentizedRange alpha\n  Tukey cluster   3         3.514171  0.05\n\n$means\n  species_richness      std  r       se Min Max   Q25  Q50   Q75\n1        16.833333 7.440878  6 2.495509   5  23 12.50 19.5 22.75\n2        18.000000 7.720104 11 1.843055   3  26 14.50 22.0 22.00\n3         6.333333 2.994945 12 1.764591   1  11  4.75  6.0  8.50\n\n$comparison\nNULL\n\n$groups\n  species_richness groups\n2        18.000000      a\n1        16.833333      a\n3         6.333333      b\n\nattr(,\"class\")\n[1] \"group\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsig_letters <- Tukey$groups[order(row.names(Tukey$groups)), ]\n\nggplot(spe_2, aes(x = cluster,  y = species_richness)) + \n  geom_boxplot() +\n  geom_text(data = sig_letters, \n            aes(label = groups, x = c(1:3), y = max(spe_2$species_richness) * 1.2)) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Statistik8_Demo_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Statistik8_Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}