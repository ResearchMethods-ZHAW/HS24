{
  "hash": "ea351eb95ae983a92d34b1834a8ba4d1",
  "result": {
    "engine": "knitr",
    "markdown": "---\nlesson: Statistik 8\nknitr:\n  opts_chunk: \n    collapse: false\nmusterloesung: false\n---\n\n\n\n\n# Statistik 8: Übung\n\n- Datensatz *crime.csv*\n\nRaten von 7 Kriminalitätsformen pro 100000 Einwohner und Jahr für die Bundesstaaten der USA\n\n- **(a) Führt eine k-means- Clusteranalyse durch.**\n- **(b) Überlegt bzw testet viele Cluster sinnvoll sind** \n- **(c)** Abschliessend entscheidet euch für eine Clusterung und **vergleicht die erhaltenen Cluster bezüglich der Kriminalitätsformen mittels ANOVA und interpretiert die Cluster entsprechend.**\n\n**Hinweis:**\nWegen der sehr ungleichen Varianzen muss auf jeden Fall eine Standardisierung stattfinden, damit Distanzen zwischen den verschiedenen Kriminalitätsraten sinnvoll berechnet werden können\n\n- Bitte erklärt und begründet die einzelnen Schritte, die ihr unternehmt, um zu diesem Ergebnis zu kommen. Dazu erstellt bitte ein mit Quarto generiertes html-Dokument, in das ihr Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, eure Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentieren.\n- Formuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\n- **Zu erstellen sind (a) Ein quarto generiertes html-Dokument mit begründetem Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation) und (b) ausformulierter Methoden- und Ergebnisteil**\n\n\n::::{.content-hidden unless-meta=\"musterloesung\"}\n\n:::{.callout-note}\n\n## Lösung Übung 8\n\n[Demoscript herunterladen (.R)](../purl/Statistik8_Uebung.R){.dld}\n\n[Demoscript herunterladen (.qmd)](../purl/Statistik8_Uebung.qmd){.dld}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"pacman\")\np_load(\"tidyverse\")\n\ncrime <- read_delim(\"./datasets/stat/crime.csv\", delim = \";\", col_names = TRUE) |>\n  column_to_rownames(var = \"State\")\n\nstr(crime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t50 obs. of  7 variables:\n $ Murder  : num  2 2.2 2 3.6 3.5 4.6 10.7 5.2 5.5 5.5 ...\n $ Rape    : num  14.8 21.5 21.8 29.7 21.4 23.8 30.5 33.2 25.1 38.6 ...\n $ Robbery : num  28 24 22 193 119 192 514 269 152 142 ...\n $ Assault : num  102 92 103 331 192 205 431 265 176 235 ...\n $ Burglary: num  803 755 949 1071 1294 ...\n $ Theft   : num  2347 2208 2697 2189 2568 ...\n $ Vehicle : num  164 228 181 906 705 447 637 776 354 376 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(crime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Murder            Rape          Robbery         Assault     \n Min.   : 1.000   Min.   :11.60   Min.   :  7.0   Min.   : 32.0  \n 1st Qu.: 3.700   1st Qu.:23.27   1st Qu.: 67.0   1st Qu.:176.5  \n Median : 6.300   Median :30.10   Median :109.5   Median :248.0  \n Mean   : 6.776   Mean   :33.85   Mean   :142.1   Mean   :275.7  \n 3rd Qu.: 9.275   3rd Qu.:43.45   3rd Qu.:202.8   3rd Qu.:366.0  \n Max.   :13.500   Max.   :72.70   Max.   :514.0   Max.   :605.0  \n    Burglary        Theft         Vehicle     \n Min.   : 385   Min.   :1358   Min.   : 99.0  \n 1st Qu.: 894   1st Qu.:2366   1st Qu.:209.8  \n Median :1148   Median :2812   Median :328.0  \n Mean   :1197   Mean   :2918   Mean   :382.2  \n 3rd Qu.:1425   3rd Qu.:3382   3rd Qu.:529.5  \n Max.   :2221   Max.   :4373   Max.   :906.0  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncrimez <- scale(crime)\n```\n:::\n\n\n„scale“ führt eine Standardisierung (z-Transformation) durch, so dass alle Variablen anschiessen einen Mittelwert von 0 und eine SD von 1 haben. Anschliessend wird das SSI-Kriterium getestet und zwar für Partitionierungen von 2 bis 6 Gruppen (wie viele Gruppen man maximal haben will, muss man pragmatisch nach der jeweiligen Fragestelltung entscheiden).\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_load(\"vegan\")\nset.seed(123)\nkm_cascade <- cascadeKM(crimez, inf.gr = 2, sup.gr = 6, iter = 100, criterion = \"ssi\")\n\nkm_cascade$results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      2 groups   3 groups   4 groups   5 groups  6 groups\nSSE 174.959159 144.699605 124.437221 108.119280 95.446705\nssi   1.226057   1.304674   1.555594   1.539051  1.507395\n```\n\n\n:::\n\n```{.r .cell-code}\nkm_cascade$partition\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   2 groups 3 groups 4 groups 5 groups 6 groups\nME        2        3        3        2        1\nNH        2        3        3        2        1\nVT        2        3        3        2        1\nMA        1        1        2        1        6\nRI        2        1        4        1        6\nCT        2        1        4        1        6\nNY        1        1        2        4        4\nNJ        1        1        2        1        6\nPA        2        3        4        5        3\nOH        2        1        4        5        2\nIN        2        3        4        5        3\nIL        1        1        2        4        4\nMI        1        2        1        4        4\nWI        2        3        3        2        1\nMN        2        3        3        2        1\nIA        2        3        3        2        1\nMO        1        1        4        5        2\nND        2        3        3        2        1\nSD        2        3        3        2        3\nNE        2        3        3        2        1\nKS        2        3        4        5        1\nDE        2        1        4        5        2\nMD        1        1        2        4        4\nVA        2        3        4        5        3\nWV        2        3        3        2        3\nNC        2        1        4        5        2\nSC        1        1        4        5        2\nGA        1        1        1        4        2\nFL        1        2        1        4        4\nKY        2        3        4        5        3\nTN        1        1        2        5        2\nAL        2        1        4        5        2\nMS        2        3        4        5        3\nAR        2        3        4        5        3\nLA        1        2        1        4        4\nOK        1        1        1        3        5\nTX        1        2        1        4        4\nMT        2        3        3        2        1\nID        2        3        3        2        1\nWY        2        3        3        2        1\nCO        1        2        1        3        5\nNM        1        2        1        3        5\nAZ        1        2        1        3        5\nUT        2        3        3        2        1\nNV        1        2        1        4        4\nWA        1        2        1        3        5\nOR        1        2        1        3        5\nCA        1        2        1        4        4\nAK        1        2        1        3        5\nHI        2        3        4        2        1\n```\n\n\n:::\n\n```{.r .cell-code}\n# k-means visualisation\n#p_load(\"cclust\")\nplot(km_cascade, sortg = TRUE)\n```\n\n::: {.cell-output-display}\n![](Statistik8_Uebung_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nNach SSI ist die 4-Gruppenlösung die beste, mit dieser wird also weitergerechnet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4 Kategorien sind nach SSI offensichtlich besonders gut\nset.seed(123)\nkmeans_1 <- kmeans(crimez, 4, nstart = 100)\n\nkmeans_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nK-means clustering with 4 clusters of sizes 14, 16, 14, 6\n\nCluster means:\n        Murder       Rape    Robbery    Assault     Burglary      Theft\n1 -1.088869933 -0.9575423 -0.9573223 -1.0018455 -0.966220768 -0.3729397\n2 -0.002098593 -0.2436615 -0.2668763 -0.1457373 -0.279054485 -0.5371659\n3  0.943560464  1.1705377  0.6331926  0.8825420  1.287858358  1.1323972\n4  0.344651676  0.1527746  1.4679727  0.6670075 -0.006342418 -0.3396250\n     Vehicle\n1 -0.9310433\n2 -0.3276196\n3  0.7120264\n4  1.3846917\n\nClustering vector:\nME NH VT MA RI CT NY NJ PA OH IN IL MI WI MN IA MO ND SD NE KS DE MD VA WV NC \n 1  1  1  4  2  2  4  4  2  2  2  4  3  1  1  1  2  1  1  1  2  2  4  2  1  2 \nSC GA FL KY TN AL MS AR LA OK TX MT ID WY CO NM AZ UT NV WA OR CA AK HI \n 2  3  3  2  4  2  2  2  3  3  3  1  1  1  3  3  3  1  3  3  3  3  3  2 \n\nWithin cluster sum of squares by cluster:\n[1] 19.37307 39.51883 48.95481 16.59050\n (between_SS / total_SS =  63.7 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n```\n\n\n:::\n\n```{.r .cell-code}\nkmeans_1$size\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14 16 14  6\n```\n\n\n:::\n\n```{.r .cell-code}\n#  Clustering-Resultat in Ordinationsplots darstellen\np_load(factoextra)\nfviz_cluster(kmeans_1, data = crimez, \n             ggtheme = theme_classic(), main = \"\" )\n```\n\n::: {.cell-output-display}\n![](Statistik8_Uebung_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# File für ANOVA (Originaldaten der Vorfälle, nicht die ztransformierten)\ncrime_KM4 <- data.frame(crime, kmeans_1[1])\ncrime_KM4$cluster <- as.factor(crime_KM4$cluster)\ncrime_KM4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Murder Rape Robbery Assault Burglary Theft Vehicle cluster\nME    2.0 14.8      28     102      803  2347     164       1\nNH    2.2 21.5      24      92      755  2208     228       1\nVT    2.0 21.8      22     103      949  2697     181       1\nMA    3.6 29.7     193     331     1071  2189     906       4\nRI    3.5 21.4     119     192     1294  2568     705       2\nCT    4.6 23.8     192     205     1198  2758     447       2\nNY   10.7 30.5     514     431     1221  2924     637       4\nNJ    5.2 33.2     269     265     1071  2822     776       4\nPA    5.5 25.1     152     176      735  1654     354       2\nOH    5.5 38.6     142     235      988  2574     376       2\nIN    6.0 25.9      90     186      887  2333     328       2\nIL    8.9 32.4     325     434     1180  2938     628       4\nMI   11.3 67.4     301     424     1509  3378     800       3\nWI    3.1 20.1      73     162      783  2802     254       1\nMN    2.5 31.8     102     148     1004  2785     288       1\nIA    1.8 12.5      42     179      956  2801     158       1\nMO    9.2 29.2     170     370     1136  2500     439       2\nND    1.0 11.6       7      32      385  2049     120       1\nSD    4.0 17.7      16      87      554  1939      99       1\nNE    3.1 24.6      51     184      748  2677     168       1\nKS    4.4 32.9      80     252     1188  3008     258       2\nDE    4.9 56.9     124     241     1042  3090     272       2\nMD    9.0 43.6     304     476     1296  2978     545       4\nVA    7.1 26.5     106     167      813  2522     219       2\nWV    5.9 18.9      41      99      625  1358     169       1\nNC    8.1 26.4      88     354     1225  2423     208       2\nSC    8.6 41.3      99     525     1340  2846     277       2\nGA   11.2 43.9     214     319     1453  2984     430       3\nFL   11.7 52.7     367     605     2221  4373     598       3\nKY    6.7 23.1      83     222      824  1740     193       2\nTN   10.4 47.0     208     274     1325  2126     544       4\nAL   10.1 28.4     112     408     1159  2304     267       2\nMS   11.2 25.8      65     172     1076  1845     150       2\nAR    8.1 28.9      80     278     1030  2305     195       2\nLA   12.8 40.1     224     482     1461  3417     442       3\nOK    8.1 36.4     107     285     1787  3142     649       3\nTX   13.5 51.6     240     354     2049  3987     714       3\nMT    2.9 17.3      20     118      783  3314     215       1\nID    3.2 20.0      21     178     1003  2800     181       1\nWY    5.3 21.9      22     243      817  3078     169       1\nCO    7.0 42.3     145     329     1792  4231     486       3\nNM   11.5 46.9     130     538     1845  3712     343       3\nAZ    9.3 43.0     169     437     1908  4337     419       3\nUT    3.2 25.3      59     180      915  4074     223       1\nNV   12.6 64.9     287     354     1604  3489     478       3\nWA    5.0 53.4     135     244     1861  4267     315       3\nOR    6.6 51.1     206     286     1967  4163     402       3\nCA   11.3 44.9     343     521     1696  3384     762       3\nAK    8.6 72.7      88     401     1162  3910     604       3\nHI    4.8 31.0     106     103     1339  3759     328       2\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(crime_KM4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t50 obs. of  8 variables:\n $ Murder  : num  2 2.2 2 3.6 3.5 4.6 10.7 5.2 5.5 5.5 ...\n $ Rape    : num  14.8 21.5 21.8 29.7 21.4 23.8 30.5 33.2 25.1 38.6 ...\n $ Robbery : num  28 24 22 193 119 192 514 269 152 142 ...\n $ Assault : num  102 92 103 331 192 205 431 265 176 235 ...\n $ Burglary: num  803 755 949 1071 1294 ...\n $ Theft   : num  2347 2208 2697 2189 2568 ...\n $ Vehicle : num  164 228 181 906 705 447 637 776 354 376 ...\n $ cluster : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 4 2 2 4 4 2 2 ...\n```\n\n\n:::\n:::\n\n\n\nDamit die Boxplots und die ANOVA direkt interpretierbar sind, werden für diese, anders als für die Clusterung, die untransformierten Incidenz-Werte verwendet (also crime statt crimez). Die Spalte mit der Clusterzugehörigkeit im Fall von k-means mit 4 Clustern hängt man als Spalte an (Achtung: muss als Faktor definiert werden!).\n\nAnschliessend kann man die 7 ANOVAs rechnen, die Posthoc-Vergleiche durchführen und die zugehörigen Boxplots mit Buchstaben für die homogenen Gruppen erzeugen. Sinnvollerweise gruppiert man die Abbildungen gleich, z. B. je 2 x 2. Das Skript ist hier simple für jede Verbrechensart wiederholt. \n\n\n::: {.cell}\n\n```{.r .cell-code}\np_load(\"multcomp\")\n\naov_Murder <- aov(Murder ~ cluster, data = crime_KM4)\nsummary(aov_Murder)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncluster      3  355.4  118.46   23.75 1.96e-09 ***\nResiduals   46  229.4    4.99                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Murder, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Murder <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Murder)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Murder) * 1.1)) +\n  ylim(0, max(crime_KM4$Murder) * 1.1) +\n  theme_classic()\n#\naov_Rape <- aov(Rape ~ cluster, data = crime_KM4)\nsummary(aov_Rape)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncluster      3   6945  2315.0   31.95 2.58e-11 ***\nResiduals   46   3333    72.5                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Rape, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Rape <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Rape)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Rape)* 1.1)) +\n  ylim(0, max(crime_KM4$Rape) * 1.1) +\n  theme_classic()\n#\naov_Robbery <- aov(Robbery ~ cluster, data = crime_KM4)\nsummary(aov_Robbery)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncluster      3 386563  128854   30.24 5.96e-11 ***\nResiduals   46 196025    4261                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Robbery, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Robbery <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Robbery)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Robbery) * 1.1)) +\n  ylim(0, max(crime_KM4$Robbery) * 1.1) +\n  theme_classic()\n#\naov_Assault <- aov(Assault ~ cluster, data = crime_KM4)\nsummary(aov_Assault)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \ncluster      3 541786  180595   20.39 1.51e-08 ***\nResiduals   46 407517    8859                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Rape, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Ausault <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Assault)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Assault) * 1.1)) +\n  ylim(0, max(crime_KM4$Assault) * 1.1) +\n  theme_classic()\n#\naov_Burglary <- aov(Burglary ~ cluster, data = crime_KM4)\nsummary(aov_Burglary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df  Sum Sq Mean Sq F value  Pr(>F)    \ncluster      3 6602474 2200825   50.21 1.5e-14 ***\nResiduals   46 2016382   43834                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Burglary, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Burglary <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Burglary)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Burglary)* 1.1)) +\n  ylim(0, max(crime_KM4$Burglary)*1.1) +\n  theme_classic()\n#\naov_Theft <- aov(Theft ~ cluster, data = crime_KM4)\nsummary(aov_Theft)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df   Sum Sq Mean Sq F value   Pr(>F)    \ncluster      3 14249791 4749930   16.25 2.44e-07 ***\nResiduals   46 13448760  292364                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Theft, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Theft <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Theft)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Theft)* 1.1)) +\n  ylim(0, max(crime_KM4$Theft)*1.1) +\n  theme_classic()\n#\naov_Vehicle <- aov(Vehicle ~ cluster, data = crime_KM4)\nsummary(aov_Vehicle)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df  Sum Sq Mean Sq F value   Pr(>F)    \ncluster      3 1427939  475980   30.08 6.46e-11 ***\nResiduals   46  727932   15825                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nletters <- cld(glht(aov_Vehicle, linfct = mcp(cluster = \"Tukey\")))\ncld_letters <- data.frame(cluster = names(letters$mcletters$Letters), \n                          letters = letters$mcletters$Letters)\nf_Vehicle <-\n  ggplot(crime_KM4, aes(x = cluster,  y = Vehicle)) + \n  geom_boxplot() +\n  geom_text(data = cld_letters, aes(label = letters, x = c(1:4), y = max(crime_KM4$Vehicle) * 1.1)) +\n  ylim(0, max(crime_KM4$Vehicle) * 1.1) +\n  theme_classic()\n\n\np_load(patchwork)\n\n  f_Murder + f_Rape + f_Robbery  + \n  f_Ausault + f_Burglary + f_Theft +\n  f_Vehicle +\n  plot_layout(ncol = 3, nrow = 3)\n```\n\n::: {.cell-output-display}\n![](Statistik8_Uebung_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nDie Boxplots erlauben jetzt auch eine Beurteilung der Modelldiagnostik: \nDie Residuen sind hinreichen normalverteilt (symmetrisch) \n\n:::\n:::: ",
    "supporting": [
      "Statistik8_Uebung_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}