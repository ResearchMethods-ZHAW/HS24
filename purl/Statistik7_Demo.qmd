---
lesson: Statistik7
knitr:
  opts_chunk: 
    collapse: true
---

# Statistik 7: Demo

[Download dieses Demoscript ](../purl/Statistik7_Demo.R) (rechtsklick → speichern unter)

-   Datensatz *Doubs_spe* von  @borcard2011


```{r}
library("pacman")
p_load("tidyverse")

spe <- read_delim("./datasets/stat/Doubs_species.csv", delim = ";", col_names = TRUE) |>
  column_to_rownames(var = "Site")

str(spe)
summary(spe)
```

k-means ist eine lineare Methode und daher nicht für Artdaten geeignet), darum müssen wir unsere Daten transformieren (für die meisten anderen Daten ist die Funktion „scale“, welche jede Variable so skaliert, dass sie einen Mittelwert von 0 und einen Standardabweichungswert von 1 hat, besser geeignet)
die Randsumme der Quadrate gleich eins machen

```{r}
p_load(vegan)
spe_norm <- decostand(spe, "normalize")
```

### k-means clustering mit Artdaten

```{r}
# k-means-Clustering mit 4 Gruppen durchführen
set.seed(123)
kmeans_1 <- kmeans(spe_norm, centers = 4, nstart = 100)
kmeans_1$cluster

#  Visualisierung
p_load(factoextra)
fviz_cluster(kmeans_1, 
             data = spe, 
             ggtheme = theme_classic(), main = "" )
```

Wie viele Cluster (Gruppen) sollen definiert werden? Oft haben wir eine Vorstelung über den 
Range der Anzahl Cluster. Value criterions wie der Simple Structure Index (ssi) können
eine zusätzliche Hilfe sein, um die geeignete Anzahl von Clustern zu finden.

```{r}
# k-means partionierung, 2 bis 10 Gruppen
set.seed(123)
km_cascade <- cascadeKM(spe_norm,  inf.gr = 2, sup.gr = 10, iter = 100, criterion = "ssi")
km_cascade$results
km_cascade$partition

# Visualisierung citerion Simple Structure Index
plot(km_cascade, sortg = TRUE)

# k-means-Clustering mit 3 Gruppen durchführen
set.seed(123)
kmeans_2 <- kmeans(spe_norm, centers = 3, nstart = 100)


#  Clustering-Resultat in Ordinationsplots darstellen
fviz_cluster(kmeans_2, data = spe, 
             ggtheme = theme_classic(), main = "" )

# Resultat intepretieren
kmeans_2

# Zuordnung Sites zu den Clustern (separat)
kmeans_2$cluster

# Anzahl Sites pro Cluster
kmeans_2$size

# Mittlere Abundance für jede Variable (Fischart) in jedem Cluster (mit untransformierten Daten)
aggregate(spe, by = list(cluster = kmeans_2$cluster), mean)

# Mittlere Fisch-Artenzahl in jedem Cluster
aggregate( specnumber(spe), by = list(cluster = kmeans_2$cluster), mean)


# Unterschiede Mittlere Fisch-Artenzahl pro Cluster testen

# File for Anova erstellen
spe_2 <- data.frame(spe, 
                    "cluster" = as.factor(kmeans_2$cluster), 
                    "species_richness" = specnumber(spe))
str(spe_2)

aov_1 <- aov(species_richness~cluster, data = spe_2)
summary(aov_1)

p_load(agricolae)
( Tukey <- HSD.test(aov_1, "cluster") )

sig_letters <- Tukey$groups[order(row.names(Tukey$groups)), ]

ggplot(spe_2, aes(x = cluster,  y = species_richness)) + 
  geom_boxplot() +
  geom_text(data = sig_letters, 
            aes(label = groups, x = c(1:3), y = max(spe_2$species_richness) * 1.1)) +
  theme_classic()
```
